x["B"]
names(x)
names(x[2])
x <- c("a", "b", "c")
length(x)
nrow(x)
NROW(x)
"a" %in% x
"d" %in% x
setdiff(c("a", "b", "c"), c("a", "d"))
rep(1:2, 5) # 1 2 를 5번 반복
rep(1:2, each = 5) # each=> 1과 2를 각각 5번 반복
rep(1:2:3,each=5)
rep(1:3,each=5)
matrix(c(1, 2, 3,4, 5, 6, 7, 8, 9,10), nrow = 3)
matrix(c(1, 2, 3,4, 5, 6, 7, 8, 9), nrow = 3)
matrix(c(1, 2, 3,4, 5, 6, 7, 8, 10), nrow = 3)
matrix(c(1, 2, 3,4, 5, 6, 7, 8, 9,10), nrow = 3)
matrix(c(1, 2, 3,4, 5, 6, 7, 8, 9,10), nrow = 4)
matrix(c(1, 2, 3,4, 5, 6, 7, 8, 9,10,11,12), nrow = 4)
matrix(c(1, 2, 3,4, 5, 6, 7, 8, 9,10,11,12), nrow = 4)
matrix(c(1,2,3,4,5,6,7,8,9,10,11,12,ncol=4))
matrix(c(1, 2, 3,4, 5, 6, 7, 8, 9), ncol = 3)
matrix(c(1,2,3,4,5,6,7,8,9,10,11,12),ncol=4))
matrix(c(1,2,3,4,5,6,7,8,9,10,11,12),ncol=4)
matrix(c(1,2,3,4,5,6,7,8,9,10,11,12),ncol=5)
matrix(c(1,2,3,4,5,6,7,8,9,10,11,12),nrow=2,ncol=5)
dim(matrix(c(1, 2, 3,4, 5, 6, 7, 8, 9), nrow = 3))
matrix(c(1,2,3,4,5,6,7,8,9,10,11,12),nrow=2,ncol=5)
matrix(c(1, 2, 3,4, 5, 6, 7, 8, 9,10), nrow = 3)
matrix(c(1, 2, 3,4, 5, 6, 7, 8, 9), nrow = 3)
matrix(c(1, 2, 3,4, 5, 6, 7, 8, 9,10,11,12), nrow = 4)
matrix(c(1,2,3,4,5,6,7,8,9,10),nrow=2,ncol=2)
dim(matrix(c(1, 2, 3,4, 5, 6, 7, 8, 9), nrow = 3))
matrix(c(1,2,3,4,5,6,7,8,9,10),nrow=2,ncol=2)
matrix(c(1,2,3,4,5,6,7,8,9,10),ncol=2)
matrix(c(1, 2, 3,4, 5, 6, 7, 8, 9), nrow = 3, byrow = T)
matrix(c(1, 2, 3,4, 5, 6, 7, 8, 9), nrow = 3, byrow = F)
matrix(c(1, 2, 3,4, 5, 6, 7, 8, 9), nrow = 3, byrow = T)
matrix(c(1, 2, 3,4, 5, 6, 7, 8, 9), nrow = 3, bycol = T)
matrix(c(1, 2, 3,4, 5, 6, 7, 8, 9), nrow = 3, byrow = T)
x[1:2, 2:3]
matrix(c(1, 2, 3,4, 5, 6, 7, 8, 9), nrow = 3, byrow = T)
x[1:2, 2:3]
c(x[1:2, 2:3])
matrix(c(1, 2, 3,4, 5, 6, 7, 8, 9), nrow = 3, byrow = T)
c(x[1:2, 2:3])
x <- matrix (c(1, 2, 3, 4, 5, 6, 7, 8, 9) , ncol =3)
x
x[1,1]
x[2,3]
x[1:2,]
x[-3,]
x[c(1, 3), c(1,3)]
x[1:2,2:3]
x[c(1, 3), c(2,3)]
x <- matrix (c(1, 2, 3, 4, 5, 6, 7, 8, 9) , byrow  =3)
x
x[1,1]
x[2,3]
x[1:2,]
x[-3,]
x[1:2,2:3]
x[c(1, 3), c(2,3)]
x[1:2,2:3]
x[1,1]
x[2,3]
x <- matrix (c(1, 2, 3, 4, 5, 6, 7, 8, 9) , byrow  =3)
x
x <- matrix (c(1, 2, 3, 4, 5, 6, 7, 8, 9) , byrow  =T)
x
x[1,1]
x[2,3]
x[1:2,]
x[-3,]
x[1:2,2:3]
x[c(1, 3), c(2,3)]
x <- matrix (c(1, 2, 3, 4, 5, 6, 7, 8, 9) , nrow=3 ncol =3)
x <- matrix (c(1, 2, 3, 4, 5, 6, 7, 8, 9) , nrow=3 ,byrow=T)
x
x[1,1]
x[2,3]
x[1:2,]
x[-3,]
x[1:2,2:3]
x[c(1,2),c(1,3),c(2,2),c(2,3)]
x[c(1,2),c(1,3)]
x[1:2,2:3]
x[c(1,2)]
c(x[1:2, 2:3])
x <- matrix (c(1, 2, 3, 4, 5, 6, 7, 8, 9) , ncol =3)
x
x[1,1]
x[2,3]
x[1:2,]
x[-3,]
x[c(1, 3), c(1,3)]
x <- matrix (c(1, 2, 3, 4, 5, 6, 7, 8, 9) , ncol =3,byrow=T)
x
x[1,1]
x[2,3]
x[1:2,]
x[-3,]
x[1:2, 2:3]
x[c(1, 2), c(2,3)]
english
is.na(english) ## na인지 아닌지 확인하는 부분
english <- NA
english
is.na(english) ## na인지 아닌지 확인하는 부분
x <- matrix (c(1, 2, 3, 4, 5, 6, 7, 8, 9) , nrow =3)
x*2
x/2
x+ x
x- x
x %*% x
x %*% x
t(x)
x <- matrix (c(1, 2, 3, 4) , ncol =2)
x
solve(x)
x <- matrix (c(1, 2, 3, 4) , ncol =2)
solve(x)
x %*% solve (x)
t(x)
matrix(1:12, ncol = 4)
array (1:12 , dim=c(3, 4)) # n x m
array (1:12 , dim=c(2, 2, 3)) #2 x 2 x 3 => (n x m x p)
x<- array (1:12 , dim=c(2, 2, 3))
x
x[1, 1, 1]
x[1, 2, 3]
x[ , , 3]
dim(x)
d <- data.frame(x=c(1, 2, 3, 4, 5), y=c(2, 4, 6, 8, 10))
d
d <- data.frame(x=c(1, 2, 3, 4, 5),y=c(2, 4, 6, 8, 10),
z=c('M', 'F', 'M', 'F', 'M'))
d
class(d)
class(x)
str(d)
# 새로운 데이터 추가
d$v <- c(3, 6, 9, 12, 15)
d
d$x=c(1,2,3,4,6)
d
dim(d)
d$x
d[1,2]
d[1,2]
d[c(1,3),2]
d[c(1,3),2]
d[-1, -c(2,3)]
d[1:2,] # 1~2행의 모든열을 가져옴
d[,c("x","y")] # x,y열의 모든 열을 가져옴
d[,c("x")]  # x의 열을 가져옴
d[,"x"]
d[, c("x"), drop=FALSE]
d[, c("x"), drop=TRUE]
FALSE
d[, c("x"), drop=FALSE]
# head() 로 데이터의 앞부분만 실행
d2 <- data.frame(x=1:1000)
d2
head(d2)
tail(d2)
x <- data.frame(1:3)
colnames(x) <- c('val')
x
rownames(x) <- c('a','b','c')
x
# %in% 연산자로 특정 열만 선택할수 있음
(d <- data.frame(a=1:3, b=4:6, c=7:9))
# 괄호 사용으로 바로 결과 출력
d[        , names(d) %in% c("b", "c")]
d[        , !names(d) %in% c("a")]
class(c(1, 2))
class(matrix(c(1, 2)))
class(list(c(1,2)))
class(data.frame(x=c(1,2)))
class(d)
# str()로도 확인 가능
str(c(1, 2))
str(matrix(c(1,2)))
str(list(c(1,2)))
str(data.frame(x=c(1,2)))
is.numeric(c(1, 2, 3))
is.numeric(c('a', 'b', 'c'))
is.matrix(matrix(c(1, 2)))
x <- data.frame(matrix(c(1, 2, 3, 4), ncol=2))
x
data.frame(list(x=c(1, 2), y=c(3, 4)))
# as.numric, as.factor등의 함수를 사용해 형변환 가능
x <- c("m", "f")
x
as.factor(x)
as.numeric(as.factor(x))
factor(c("m", "f"), levels=c("m", "f"))
matrix(c(1, 2, 3,4, 5, 6, 7, 8, 9), nrow = 3, byrow = F)
matrix(c(1, 2, 3,4, 5, 6, 7, 8, 9), nrow = 3, byrow = T)
x <- matrix (c(1, 2, 3, 4, 5, 6, 7, 8, 9) , ncol =3)
x
x[1,1]
x[2,3]
x[1:2,]
x[-3,]
x[c(1, 3), c(1,3)]
for (i in 1:10) {
print(i)
}
x = c(1, 5, 10, 20, 30, 100, 200)
for (i in 1:length(x)){
print(x[i])
}
print(i)
for (i in seq(1,10,2)){
print(i)
}
x = c(1, 5, 10, 20, 30, 100, 200)
x = c(1, 5, 10, 20, 30, 100, 200)
for (i in 1:length(x)){
print(x[i])
}
x <- c(2,5,3,9,8,11,6)
count <- 0
for (val in x) {
if(val %% 2 == 0)  count = count+1
}
print(count)
print(i)
for( i in c(10,100,1,1000)){
print(i)
}
print(i)
x = c(1, 5, 10, 20, 30, 100, 200)
for (i in 1:length(x)){
print(i)
print(x[i])
}
x <- c(2,5,3,9,8,11,6)
x = c(1, 5, 10, 20, 30, 100, 200)
for (i in 1:length(x)){
print(i)
print(x[i])
}
for (i in 1:length(x)){
print(i)
x = c(1, 5, 10, 20, 30, 100, 200)
for (i in 1:length(x)){
print(i)
print(x[i])
}
x = c(1, 5, 10, 20, 30, 100, 200)
for (i in 1:length(x)){
print(i)
print(x[i])
}
print(x[i])
for (i in 1:length(x)){
print(i)
print(x[i])
}
for( i in c(10,100,1,1000)){
print(i)
}
x = c(1, 5, 10, 20, 30, 100, 200)
for (i in 1:length(x)){
print(i)
print(x[i])
}
x <- c(2,5,3,9,8,11,6)
count <- 0
for (val in x) {
if(val %% 2 == 0)  count = count+1
}
print(count)
i <- 0
while (i < 10) {
print (i)
i <- i + 1
}
i <- 1
while (i < 6) {
print(i)
i = i+1
}
i <- 0
while (i <=9){
i <- i+1
if (i %%2 !=0){
next
}
print(i)
}
1:5 * 2 + 1
x <- c(1, 2, 3, 4, 5)
x + 1
x <- c(1, 2, 3, 4, 5)
x + x
x == x
x == c(1, 2, 3, 5, 5)
i=2
while(i<=9){
while(j<=9){
print(paste(i,"x",j,"=",i*j))
j=j+1
}
i=i+1
j=1
}
i=2
while(i<=9){
while(j<=9)
print(paste(i,"x",j,"=",i*j))
j=j+1
i=i+1
j=1
}
i=2
j=1
while(i<=9){
while(j<=9)
print(paste(i,"x",j,"=",i*j))
j=j+1
i=i+1
j=1
}
i=2
j=1
while(i<=9){
while(j<=9){
print(paste(i,"x",j,"=",i*j))
j=j+1
}
i=i+1
j=1
}
i=2
j=1
while(i<=9){
while(j<=9){
print(paste(i,"x",j,"=",i*j))
j=j+1
}
i=i+1
j=1
}
sum(c(1, 2, 3, NA))
sum(c(1, 2, 3, NA), na.rm =T)
testpn=function(x){
if(x > 0){
print("Positive number")
}
else{
print("negative number")
}
}
testpn(3)
test(-1)
testpn=function(x){
if(x > 0){
print("Positive number")
}
else{
print("negative number")
}
}
testpn(3)
test(-1)
testpn=function(x){
if(x > 0){
print("Positive number")
}
else{
print("negative number")
}
}
testpn(3)
test(-1)
testpn=function(x){
if(x > 0){
print("Positive number")
}
else{
print("negative number")
}
}
testpn(3)
test(-1)
testpn=function(x){
if(x > 0){
print("Positive number")
}
else{
print("negative number")
}
}
testpn(3)
testpn(-1)
multinum=function(x){
for(i in x:9){
for(j in 1:9){
print(paste(i,"x",j,i*j))
}
}
}
multinum(3)
multinum=function(x){
for(i in 1:9){
print(paste(x,"x",j,i*j))
}
}
multinum(3)
multinum=function(x){
for(i in 1:9){
print(paste(x,"x",i,x*i))
}
}
multinum(3)
multinum=function(x){
for(i in 1:9){
print(paste(x,"x",i,"=",x*i))
}
}
multinum(3)
fibo <- function (n) {
if (n == 1 || n == 2) {
return (1)
}
return(fibo(n - 1) + fibo(n - 2))
}
fibo(5)
fibo(6)
iris
dim(iris)
head(iris)
tail(iris)
str(iris)
head(iris)
str(iris)
head(iris3)
library(help=datasets)
data(mtcars)
setwd("/Users/kyungminahn/Dropbox/KMU/자료처리응용실습")
setwd("C:\jhoney0625")
getwd()
setwd("C:/jhoney0625")
x <- read.csv("a.csv", header = FALSE)
x <- read.csv("a.csv", header = TRUE)
str(x)
x <- read.csv("a.csv", header = TRUE)
str(x)
x
x <- read.csv("b.csv")
x <- read.csv("b.csv")
x
names(x) <- c("id", "name", "score")
str(x)
x
x <- read.csv("c.csv")
x
x <- read.csv("c.csv", na.strings = c("NIL"))
x
is.na(x$score)
# 데이터를 파일로 저장하기
write.csv(x, 'd.csv', row.names = F)
is.na(x$score)
x <- 1:5
y <- 6:10
save(x, y, file="xy.RData")
load("xy.RData")
load("xy.RData")
rm(list=ls())
load("xy.RData")
x <- data.frame(id=c(1, 2), name=c("a", "b"))
x
y <- rbind(x, c(3, "c"))
y
cbind(c(1, 2, 3), c(4, 5, 6)) # cbind() 열을 붙여주는것
y <- cbind(x, greek=c('alpha', 'beta'))
y
str(y)
sum(1:10)
d <- matrix(1:9, ncol= 3)
apply(d, 1, sum)
apply(d, 2, sum)
head(iris)
apply(iris[, 1:4], 2, sum)
colSums(iris[, 1:4])
rowSums(iris[, 1:4])
split(iris, iris$Species)
subset(iris, Species == "setosa")
subset(iris, Species == "setosa" & Sepal.Length > 5.0)
subset(iris, select=c(Sepal.Length, Species))
subset(iris, select=-c(Sepal.Length, Species))
x <- c(20, 11, 33, 50, 47)
sort(x)
sort(x, decreasing=TRUE)
order(x)
order(-x)
x[order(x)]
order(-x)
methods("plot")
install.packages("mlbench")
library ( mlbench )
install.packages("mlbench")
library ( mlbench )
sessionInfo()
install.packages("mlbench")
install.packages("mlbench")
library ( mlbench )
